[tool.poetry]
name = "toggl-timesheet"
version = "0.1.0"
description = ""
authors = ["Vadim Filatov <filatovw.dev@gmail.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.11"
requests = "^2.31.0"
polars = {extras = ["deltalake", "fsspec", "plot"], version = "^0.20.19"}
mypy = "^1.9.0"
python-dotenv = "^1.0.1"


[tool.poetry.group.test.dependencies]
pytest = "^8.1.1"
pytest-coverage = "^0.0"
ruff = "^0.3.5"
black = "^24.3.0"

[tool.poetry.group.dev.dependencies]
memory-profiler = "^0.61.0"
pyspy = "^0.1.1"
ipdb = "^0.13.13"
ipython = "^8.23.0"
jupyterlab = "^4.1.6"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"


[tool.coverage.run]
branch = true
source = ["toggl_timesheet", "tests"]

[tool.coverage.report]
ignore_errors = false
show_missing = true
exclude_lines = [
  # Have to re-enable the standard pragma
  "pragma: no cover",
  # Don't complain about missing debug-only code:s
  "def __repr__",
  "if self.debug",
  # Don't complain if tests don't hit defensive assertion code:
  "raise AssertionError",
  "raise NotImplementedError",
  "AbstractMethodError",
  # Don't complain if non-runnable code isn't run:
  "if 0:",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
]

[tool.black]
target-version = ['py311']
line-length = 120
exclude = '''
(
  | \.egg
  | \.git
  | \.hg
  | \.mypy_cache
  | \.nox
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
  | setup.py
)
'''

[tool.mypy]
plugins = [
  "pydantic.mypy",
]
python_version = "3.11"
mypy_path = "stubs/"
check_untyped_defs = true
ignore_errors = false
ignore_missing_imports = true
strict_optional = true
warn_unused_ignores = true
warn_redundant_casts = true
warn_unused_configs = true
warn_incomplete_stub = true
warn_unreachable = true
show_column_numbers = true
allow_redefinition = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
disallow_untyped_calls = true
show_error_codes = true

[tool.pytest.ini_options]
minversion = "7.0"
filterwarnings = "ignore::DeprecationWarning"
addopts = "-ra --strict-markers"
testpaths = [
    "tests",
]
markers = []